# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from classify import classify


class Ui_mainWindow(object):

    def setupUi(self, mainWindow):
        mainWindow.setObjectName("mainWindow")
        mainWindow.resize(380, 426)
        font = QtGui.QFont()
        font.setFamily("微软雅黑 Light")
        mainWindow.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(
            QtGui.QPixmap("C:/Users/lenovo/Downloads/bitbug_favicon (3).ico"),
            QtGui.QIcon.Normal, QtGui.QIcon.Off)
        mainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(mainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(80, 300, 191, 61))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.radioButton = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton.setGeometry(QtCore.QRect(70, 250, 251, 41))
        font = QtGui.QFont()
        font.setFamily("微软雅黑 Light")
        font.setPointSize(14)
        self.radioButton.setFont(font)
        self.radioButton.setObjectName("radioButton")
        self.radioButton_2 = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton_2.setGeometry(QtCore.QRect(70, 200, 211, 41))
        font = QtGui.QFont()
        font.setFamily("微软雅黑 Light")
        font.setPointSize(14)
        self.radioButton_2.setFont(font)
        self.radioButton_2.setObjectName("radioButton_2")
        self.radioButton_3 = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton_3.setGeometry(QtCore.QRect(70, 160, 191, 41))
        font = QtGui.QFont()
        font.setFamily("微软雅黑 Light")
        font.setPointSize(14)
        self.radioButton_3.setFont(font)
        self.radioButton_3.setObjectName("radioButton_3")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(30, 30, 251, 41))
        font = QtGui.QFont()
        font.setFamily("微软雅黑 Light")
        font.setPointSize(14)
        self.label.setFont(font)
        self.label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label.setFrameShadow(QtWidgets.QFrame.Plain)
        self.label.setLineWidth(7)
        self.label.setMidLineWidth(1)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(30, 80, 211, 41))
        font = QtGui.QFont()
        font.setFamily("微软雅黑 Light")
        font.setPointSize(14)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(250, 30, 51, 41))
        font = QtGui.QFont()
        font.setFamily("微软雅黑 Light")
        font.setPointSize(14)
        self.lineEdit.setFont(font)
        self.lineEdit.setObjectName("lineEdit")
        self.radioButton_4 = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton_4.setGeometry(QtCore.QRect(70, 120, 201, 41))
        font = QtGui.QFont()
        font.setFamily("微软雅黑 Light")
        font.setPointSize(14)
        self.radioButton_4.setFont(font)
        self.radioButton_4.setObjectName("radioButton_4")
        mainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(mainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 380, 26))
        self.menubar.setObjectName("menubar")
        mainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(mainWindow)
        self.statusbar.setObjectName("statusbar")
        mainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(mainWindow)
        self.pushButton.clicked.connect(self.classification)
        QtCore.QMetaObject.connectSlotsByName(mainWindow)

    def retranslateUi(self, mainWindow):
        _translate = QtCore.QCoreApplication.translate
        mainWindow.setWindowTitle(_translate("mainWindow", "随机分组程序"))
        self.pushButton.setText(_translate("mainWindow", "生成分组"))
        self.radioButton.setText(_translate("mainWindow", "考虑男女比例平衡"))
        self.radioButton_2.setText(_translate("mainWindow", "考虑院系平均"))
        self.radioButton_3.setText(_translate("mainWindow", "考虑年级平均"))
        self.label.setText(_translate("mainWindow", "输入每组至少多少人："))
        self.label_2.setText(_translate("mainWindow", "选择分组算法："))
        self.radioButton_4.setText(_translate("mainWindow", "完全随机算法"))

    def classification(self):
        if self.lineEdit.text() == "":
            QtWidgets.QMessageBox.information(self.pushButton, "提示",
                                            "请输入小组人数！！")
            return
        choice = 0 # 不选默认完全随机
        if self.radioButton_4.isChecked():
            choice = 0
        if self.radioButton_3.isChecked():
            choice = 1
        if self.radioButton_2.isChecked():
            choice = 2
        if self.radioButton.isChecked():
            choice = 3
        classify.work(choice, self.lineEdit.text())
        QtWidgets.QMessageBox.information(self.pushButton, "提示",
                                            "成功生成分组文件！")


    def classification(self):
        if self.lineEdit.text() == "":
            QtWidgets.QMessageBox.information(self.ok_1, "提示",
                                              "请输入小组人数！！")
            return
        choice = -1  # 初始化choice
        if self.opt_0.isChecked():
            choice = 0
        if self.opt_1.isChecked():
            choice = 1
        if self.opt_2.isChecked():
            choice = 2
        if self.opt_3.isChecked():
            choice = 3
        if choice == -1:
            QtWidgets.QMessageBox.information(self.ok_1, "提示",
                                              "请选择分组算法！！")
            return
        opt = -1 # 初始化生成选项
        if self.result_0.isChecked():
            opt = 0
        if self.result_1.isChecked():
            opt = 1
        if self.result_2.isChecked():
            opt = 2
        if self.result_3.isChecked():
            opt = 3   
        classify.work(choice, self.lineEdit.text(), self.lineEdit_2.text())
        QtWidgets.QMessageBox.information(self.ok_1, "提示", "成功生成分组文件！")
